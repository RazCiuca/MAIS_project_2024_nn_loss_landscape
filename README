


step1a_train_cifar10.py
    This file trains a small Resnet on cifar10 and saves all intermediate models in the models folder

step1b_max_eigval_through_training.py
    Load up all the model checkpoints and evaluate the loss on the whole dataset, and find the biggest eigenvalue, plotting this

step2a_compute_eigvecs.py
    Compute The eigenvalues and eigenvectors of the full dataset at intermediate checkpoints in the trained network

step2b_compute_all_grads.py
    Computes the full dataset gradient at given checkpoints

step2c_plot_eigvals.py
    Plots the eigenvalues of already computed spectra through time

step2d_plot_eigvec_similarity.py

step2e_plot_eigenvec_power.py

step2f_eigvec_similarity.py

step2g_eigvec_cliffdrop_sim.py

step2h_optimised_eigvals_vs_cliffdrop_sim.py

step3a_hess_line_search.py

step3b_plot_line_searches.py

step3c_implied_minimum_loss.py

step3d_cliff_plotting.py

step3e_batch_mininum_variance.py


